from zlapi.models import Message, MessageStyle, MultiMsgStyle
import os
import threading
import tempfile
from zalo_tts import ZaloTTS  # pip install zalo-tts

CACHE_DIR = 'cache'
if not os.path.exists(CACHE_DIR):
    os.makedirs(CACHE_DIR)

def handle_voice_command(message, message_object, thread_id, thread_type, author_id, client):
    # Ki·ªÉm tra reply c√≥ quote k√®m tin nh·∫Øn vƒÉn b·∫£n kh√¥ng
    quote = getattr(message_object, 'quote', None)
    if not quote or not isinstance(quote, dict):
        client.sendMessage(
            Message(text="‚ùå Vui l√≤ng reply v√†o m·ªôt tin nh·∫Øn c√≥ n·ªôi dung vƒÉn b·∫£n ƒë·ªÉ bot ƒë·ªçc."),
            thread_id, thread_type
        )
        return

    text_to_speak = quote.get('msg', None)
    if not text_to_speak:
        client.sendMessage(
            Message(text="‚ùå Tin nh·∫Øn b·∫°n reply kh√¥ng c√≥ n·ªôi dung vƒÉn b·∫£n ƒë·ªÉ ƒë·ªçc."),
            thread_id, thread_type
        )
        return

    def create_and_send_voice():
        try:
            # Th√¥ng b√°o ki·ªÉu xanh ƒë·∫≠m
            voice_text = "üéôÔ∏è Voice c·ªßa b·∫°n ƒë√¢y!"
            styles = MultiMsgStyle([
                MessageStyle(offset=0, length=len(voice_text), style="color", color="#15A85F", auto_format=False),
                MessageStyle(offset=0, length=len(voice_text), style="bold", auto_format=False)
            ])
            client.sendMessage(Message(text=voice_text, style=styles), thread_id, thread_type)

            # T·∫°o gi·ªçng n√≥i mp3 t·ª´ text b·∫±ng ZaloTTS
            tts = ZaloTTS(speaker=ZaloTTS.SOUTH_WOMEN)  # Gi·ªçng n·ªØ mi·ªÅn Nam, ƒë·ªïi gi·ªçng n·∫øu mu·ªën
            audio_data = tts.text_to_speech(text_to_speak, encode_type='mp3')

            # L∆∞u file t·∫°m
            with tempfile.NamedTemporaryFile(suffix=".mp3", dir=CACHE_DIR, delete=False) as tmpfile:
                tmpfile.write(audio_data)
                audio_path = tmpfile.name

            # G·ª≠i tr·ª±c ti·∫øp file voice n·∫øu client h·ªó tr·ª£
            if hasattr(client, 'sendVoice'):
                client.sendVoice(file_path=audio_path, thread_id=thread_id, thread_type=thread_type)
            else:
                client.sendMessage(Message(text="‚ùå Bot kh√¥ng h·ªó tr·ª£ g·ª≠i file voice tr·ª±c ti·∫øp."), thread_id, thread_type)

            # X√≥a file t·∫°m
            if os.path.exists(audio_path):
                os.remove(audio_path)

        except Exception as e:
            client.sendMessage(Message(text=f"‚ùå L·ªói khi t·∫°o ho·∫∑c g·ª≠i √¢m thanh: {str(e)}"), thread_id, thread_type)

    threading.Thread(target=create_and_send_voice).start()
